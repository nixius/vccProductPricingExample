@using MudBlazor
@using System.Net.Http.Json
@using VCC.ProductPricingApiTest.Models.Api
@inject HttpClient Http
@inject ISnackbar Snackbar
@inject IDialogService DialogService

<MudDialog>
    <DialogContent>
        <MudText Typo="Typo.h6">Price History — @ProductName</MudText>

        <MudTable Items="_entries" Dense="true" Hover="true" Bordered="true" Loading="@_loading" Class="mt-3">
            <HeaderContent>
                <MudTh style="width:30%">Changed At (UTC)</MudTh>
                <MudTh Class="text-right" style="width:25%">Retail Price Change</MudTh>
                <MudTh Class="text-right" style="width:25%">Discount Price Change</MudTh>
            </HeaderContent>

            <RowTemplate>
                <MudTd>@context.Date.ToString("yyyy-MM-dd HH:mm:ss")</MudTd>
                <MudTd Class="text-right">
                    @if (!@context.DiscountPercentage.HasValue)
                    {
                        <MudText Color="Color.Secondary">@context.Price.ToString("C")</MudText>
                    }
                </MudTd>
                <MudTd Class="text-right">
                    @if (@context.DiscountPercentage.HasValue)
                    {
                        <MudText Color="Color.Tertiary">@context.Price.ToString("C") <small>(at @context.DiscountPercentage % off)</small></MudText>
                    }
                </MudTd>
            </RowTemplate>

            <NoRecordsContent>
                <MudText Class="pa-2">No history.</MudText>
            </NoRecordsContent>
        </MudTable>
    </DialogContent>

    <DialogActions>
        <MudButton OnClick="Cancel" Color="Color.Primary">Close</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    private IMudDialogInstance MudDialog { get; set; }

    [Parameter] public int ProductId { get; set; }
    [Parameter] public string ProductName { get; set; } = "";

    private bool _loading;
    private List<ApiProductHistoryEntry> _entries = new();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _loading = true;

            var history = await Http.GetFromJsonAsync<ApiProductHistory>($"/api/products/{ProductId}");
            _entries = history.PriceHistory;
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Failed to load history: {ex.Message}", Severity.Error);
        }
        finally
        {
            _loading = false;
        }
    }

    private void Cancel() => MudDialog.Cancel();
}