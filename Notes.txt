Notes + thoughts whilst developing

* If it wasn't specifically mentioned, I would have created this project in net8 as it's the version with LTS
* Discounts don't have a time range or anything specified, so I am assuming one discount per product, that gets overriden constantly. In a different scenario I would include
  more logic to have a time range (forever being an option) as well as checking for overlaps etc.
* I've made some assumptions on serialisation based on the fact that blazor is the only consumer, for example with dates. I've trusted the blazor app to 
  deseralise in a certain way. If this api were to be used more openly, I might have done things differently with model serailisation, added stricter options etc.

Future Improvements
----
* Fully unit test dapper SQL layer
* Environment varibale for DAL switching
* Some unit tests (for ex. controller) creeped into doing multiple things, or not seperating out enough, which could be imrpoved
* More unit+integration testing (covergae could be improved)
* Paging for products
* The price calc is done in too many places, we could change the logic or store a computed price somewhere
* - This could also help imrpove the price history view, as I was hesitant to keep re-calculating the discount price
* Some UI tweaks, such as quick options to 'clear' discount
* Improved mobile view for the UI
* Variable names started to get a little messy "Original, New, Current", no longer match the UI, so could be baselined to something cleaner


AI Usage
----
* Some syntax lookups for asserts in unit tests, because fluent assertions appears to now be paid only which is what I usually use
* Some test case ideas for discounts in unit test project
* Used to generate a basic layout which I went on to tweak
* Used for a few MudBlazor specifics, since there have been some changes between Net6 and Net9